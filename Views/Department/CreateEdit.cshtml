@model HR_Administration_System.Models.Department

@{
    ViewBag.Title = "CreateEdit";
}

<div>
    <h1 class="display-4 w-75 text-start pt-2 pb-4 m-auto">Create / Edit Department</h1>
</div>

@using (Html.BeginForm("CreateEdit", "Department", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.Id)

    <div class="form-horizontal w-75 m-auto">
        <h4>Department</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Manager, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Manager, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Manager, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Status,
                    new List<SelectListItem>
                    {
                        new SelectListItem { Text = "- Select -", Value = "" },
                        new SelectListItem { Text = "Active", Value = "active" },
                        new SelectListItem { Text = "Inactive", Value = "inactive" }
                    },
                    new { @class = "form-control d-inline-block" }
                )
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <br />

        <div class="form-group d-flex gap-3 justify-content-end">
            <button type="submit" value="Save" class="btn btn-primary">Submit</button>
            @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-secondary" })
        </div>
    </div>
}
